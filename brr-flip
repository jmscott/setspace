#!/usr/bin/env bash
#
#  Synopsis:
#	Flip an active blob request log file for a particular schema.
#  Usage:
#	brr-flip <schema>
#	brr-flip setcore
#  Exit Status:
#	0	all active brr files have been flipped
#	1	unknown error
#  Note:
#	 This script is by deprecated "blobio wrap fs:$BLOBIO_ROOT"!
#

PROG=$(basename $0)
SCHEMA=

log()
{
	MSG=$@
	test -n "$SCHEMA" && MSG="$SCHEMA: $MSG"
	echo "$(date +'%Y/%m/%d %H:%M:%S'): $PROG: $MSG"
}

WARN()
{
	log "WARN: $@" >&2
}

die()
{
	log "ERROR: $@" >&2
	exit 2
}

leave()
{
	log 'good bye, cruel world'
}

test $# = 1 || die 'wrong number of arguments'
SCHEMA=$1

log 'hello, world'
trap leave EXIT

test -n "$SETSPACE_ROOT" ||
			die "environment variable not defined: SETSPACE_ROOT"
log "SETSPACE_ROOT=$SETSPACE_ROOT"

cd $SETSPACE_ROOT || die "cd $SETSPACE_ROOT failed"

. etc/profile

SCHEMA_ROOT=$SETSPACE_ROOT/schema/$SCHEMA
test -d $SCHEMA_ROOT || die "schema dir does not exist: $SCHEMA_ROOT"
SPOOL=$SCHEMA_ROOT/spool
if [ ! -e $SPOOL ];  then
	WARN "no spool directory: $SPOOL"
	WARN 'doing nothing'
	exit 0
fi

cd $SPOOL || die "cd $SPOOL failed: exit status=$?"

log 'finding active blob request log files ...'
find . -maxdepth 1 -name '*.brr' -type f 				|
	grep -v '[-][0-9][0-9]*.*[.]brr$'				|

	while read BRR;  do
	NEW_BRR=$(basename $BRR .brr)-$(date +%s).brr
	log "flip $BRR -> $NEW_BRR"
	flip-tail $BRR $NEW_BRR || die "flip-tail failed: exit status=$?"
	log "$NEW_BRR: $(wc -l $NEW_BRR | awk '{print $1}') records"
done
