#
#  Synopsis:
#	Merge blobs into tables in schema mycore.
#  Usage:
#  	flowd server etc/mycore.flow
#  See:
#  	mycore/lib/schema.sql
#  Note:
#	Requests are independent, so a delete before a merge may be out of order
#

boot
{
	brr_capacity = 256;
	flow_worker_count = 24;

	os_exec_worker_count = 8;
	os_exec_capacity = 4;

	xdr_roll_duration = "24h";
	fdr_roll_duration = "24h";
	qdr_roll_duration = "24h";

	heartbeat_duration = "10s";
}

sync map sync_brr[string]bool;

command first_flight
{
	path = "true";
}

sql database setspace
{
	driver_name = "postgres";
	data_source_name =
		"fallback_application_name=mycore.flow sslmode=disable";
	max_idle_conns = 0;

	#  mydash is interactive, so lots of database connections
	max_open_conns = 16;
}

tail brr
{
	path = "spool/jsonio.brr";
}

#
#  Has the request been seen before?
#

sql query merge_request_title_json row
{
	statement = `
SELECT EXISTS (
  SELECT
  	request_blob
    FROM
	mycore.merge_request_title_json    	
    WHERE
    	request_blob = $1
)
`;
	result row is (
		is_title_request bool
	);
}

call first_flight()
  when
  	sync_brr.LoadOrStore(brr.udig, true).loaded == false
;

query merge_request_title_json(brr.udig)
  when
  	first_flight.exit_status == 0
;
