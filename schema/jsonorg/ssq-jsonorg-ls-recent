#!/usr/bin/env bash
#
#  Synopsis:
#	list recent blobs in setcore which may not be in service
#
PROG=$(basename $0)

PSQL='psql
	--tuples-only
	--set=ON_ERROR_STOP=1
	--no-psqlrc
	--no-readline
	--expanded
'

help()
{
	echo "usage: $PROG"
}

die()
{
	echo "$PROG: ERROR: $@" >&2
	exit 1
}

test $# = 0 || die "wrong number of cli arg: got $#, want 1"

$PSQL <<END || die "psql recent failed: exit status=$?"
WITH recent AS (
  SELECT
  	dt.blob,
	count(flt.command_name) AS fault_count
    FROM
    	jsonorg.detail dt
    	  JOIN setcore.service srv ON (srv.blob = dt.blob)
	  LEFT OUTER JOIN setops.flowd_call_fault flt ON (flt.blob = dt.blob)
    GROUP BY
    	dt.blob,
	srv.discover_time
    ORDER BY
    	srv.discover_time DESC
    LIMIT
    	10
) SELECT
	rec.blob AS "Blob",
	CASE
	  WHEN dt.is_json IS NULL THEN 'Unknown'
	  WHEN dt.is_json THEN 'Yes'
	  ELSE 'No'
	END AS "Is Json",
	COALESCE(dt.word_set_255, 'Unknown') AS "Word Set <= 255",
	COALESCE(substring(dt.doc_jsonb_255::text, 1, 32)::text, 'Unknown')
	  AS "JSONB <= 32",
	COALESCE(rec.fault_count::text, 'Unknown') AS "Fault Count",
	srv.discover_time AS "Discover Time"
  FROM
  	recent rec
	  JOIN jsonorg.detail dt ON (dt.blob = rec.blob)
	  JOIN setcore.service srv ON (srv.blob = rec.blob)
  ORDER BY
  	srv.discover_time DESC
  LIMIT
  	10
END
