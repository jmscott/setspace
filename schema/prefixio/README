Synopsis:
	Route blobs to schemas based upon patterns in the 32 byte prefix.
Description:
	Blob may be routed to other schemas based upon values in the the
	first 32 bytes of of the blob.  See the table setcore.byte_prefix_32.
	Recipes may also assume that the core byte oriented setcore tables
	have already been populated:

		setcore.{byte_bitmap, byte_count, is_utf8}

	Since most routing rules are immutable, the queries are highly
	cacheable.  cool.
Note:
	Consider routing rules in postgresql.  Possible tables could be:

		prefixio.transport
			name,
			protocol
			endpoint
		prefixio.rule
			prefix,
			transport

	Perhaps cache the routing tables, updated, say, once per minute.

		cache/transport.db
		cache/rule.db

	Consider adding mapping of prefixes/file type to file guesses.

		http://www.filesig.co.uk/ofsdb.html
		https://filesignatures.net/
		https://en.wikipedia.org/wiki/List_of_file_signatures
		https://mark0.net/soft-trid-deflist.html
		https://filext.com/
		https://fileinfo.com/
		https://www.file-extensions.org/
		http://www.cryer.co.uk/file-types/index.htm
		https://www.garykessler.net/library/file_sigs.html
		https://asecuritysite.com/forensics/magic

	Gary Kessler seems to be an expert on forensic file analysis.
