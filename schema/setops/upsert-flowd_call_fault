#!/usr/bin/env bash
#
#  Synopsis:
#	Merge fault for a flowd call for a command in a particular schema.
#  Usage:
#	#  blob the command faulted upon
#	BLOB=sha:7763765cdcbf9cf3f86474556304b49b397b8b45
#
#	upsert-flowd_call_fault						\
#		pdfbox			#  schema			\
#		upsert_pddocument	#  command			\
#		$BLOB							\
#		ERR			#  xdr exit class ERR, SIG, NOPS\
#		2			#  process exit status
#		0			#  exit signal - 0 implies no signal
#		/dev/null		#  stdout file of blob
#		-			#  stderr of blob "-" reads from stdin
#  Environment:
#	BLOBIO_ALGORITHM
#  Exit Status:
#	0	fault upserted into table setops.flowd_call_fault
#	1	unexpected error (no fault written)
#  Note:
#	Consider creating separate table for std{out,err} of blob.
#

PROG=$(basename $0)
PSQL='psql
	--quiet
	--no-psqlrc
	--no-readline
	--set ON_ERROR_STOP=1
'
TMP_INPUT_PATH=${TMPDIR:=/tmp}/$PROG-$$.blob

leave()
{
	rm --force $TMP_INPUT_PATH				||
		echo "$PROG: ERROR: rm tmp blob failed: exit status=$?" >&2 
}

die()
{
	echo "$PROG: ERROR: $@" >&2
	exit 1
}

test $# = 8 || die "wrong number of arguments: got $#, need 8"

SCHEMA_NAME=$1
COMMAND_NAME=$2
BLOB=$3
EXIT_CLASS=$4
EXIT_STATUS=$5
SIGNAL=$6
STDOUT_PATH=$7
STDERR_PATH=$8

test "$STDOUT_PATH" = '-' -a "$STDERR_PATH" = '-'			&&
	die "both stdout and stderr path can not be - (stdin)"
trap leave EXIT

test -n "$BLOBIO_ALGORITHM" || die 'env not defined: BLOBIO_ALGORITHM'

#  eat either stdin "-" or a file path and return the udig
#  set TMP_INPUT_PATH so leave() can clean up

eat() {
	local WHAT=$1
	local SRC_PATH=$2
	local TMP_INPUT_PATH=$3

	#  slurp input from stdin or test for readable file
	case "$SRC_PATH" in
	-)
		#  slurp stdin for for stderr
		cat >$TMP_INPUT_PATH || die "cat >$WHAT failed: exit status=$?"
		SRC_PATH=$TMP_INPUT_PATH
		;;
	*)
		test -r $SRC_PATH || die "can not read input path: $WHAT"
		;;
	esac

	# get the udig of the input
	local UDIG=$BLOBIO_ALGORITHM:$(
		blobio eat --algorithm $BLOBIO_ALGORITHM --input-path $SRC_PATH
	)
	test $? = 0 || die "blobio eat $WHAT failed: exit status=$?"
	blobio put 							\
		--udig $UDIG						\
		--input-path $SRC_PATH					\
		--service $BLOBIO_SERVICE				||
		die "blobio put $WHAT failed: exit status=$?"

	echo $UDIG
}

STDOUT_BLOB=$(eat stdout $STDOUT_PATH $TMP_INPUT_PATH)
STDERR_BLOB=$(eat stderr $STDERR_PATH $TMP_INPUT_PATH)

#
#  Note:
#	wait for std{out,err} blobs to appear in table setcore.service;
#	otherwise, the foreign key reference in flowd_call-fault causes
#	INSERT to fail.  Seems like a better way should exist.
#


$PSQL --file $SQL || die "psql insert fault failed: exit status=$?"

exit 0
