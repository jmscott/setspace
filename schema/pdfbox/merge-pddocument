#!/usr/bin/env bash
#
#  Synopsis:
#	Extract the PDDocument scalars from PDF and merge into PostgreSQL
#  Usage:
#	merge-pddocument <udig>
#  Exit Status:
#	0	ok, extracted pddocument info and stored into PostgreSQL
#	1	blob does not exist
#	2	unexpected error
#  Environment:
#	BLOBIO_SERVICE
#	BLOBIO_GET_SERVICE
#	TMPDIR
#  Note:
#	Need to merge fault into flow file, instead of in this script.
#

START_EPOCH=$(date +%s)
PROG=merge-pddocument
PSQL='psql --no-psqlrc --quiet'

SERVICE="--service ${BLOBIO_GET_SERVICE:=$BLOBIO_SERVICE}"
TMPDIR=${TMPDIR:=/tmp}
WORK_DIR=$TMPDIR/$PROG-$$.d

TMP_BLOB=$WORK_DIR/BLOB
TMP_ROW=$WORK_DIR/ROW

leave()
{
	rm -fr $WORK_DIR
}

die()
{
	local STATUS=$2

	local MSG="$PROG: ERROR: $1"
	echo $MSG >&2

	#
	#  Best effort to get all of stderr into setcore fault table
	#
	(
		echo $MSG
		if [ -d "$WORK_DIR" && -s STDERR ];  then
			cat STDERR >&2
			cat STDERR
		fi
	) | merge-stdin-fault_flow_call					\
		pdfbox merge_pddocument	$UDIG ERR $STATUS 0

	#  reset exit status if fault INSERT fails

	local PSTATUS=${PIPESTATUS[*]}
	if [ "$PSTATUS" != '0 0' -a $STATUS = 0 ];  then
		STATUS=3
	fi
	exit $STATUS
}

trap leave EXIT
test $# = 1 || die "wrong number of arguments: got $#, expected 1" 3
BLOB=$1
UDIG="--udig $BLOB"

mkdir $WORK_DIR || die "mkdir failed: $WORK_DIR"
cd $WORK_DIR || die "cd work dir failed: exit status=$?"

#  fetch the pdf blob

blobio get $UDIG $SERVICE --output-path $TMP_BLOB
STATUS=$?
case $STATUS in
0)
	;;
1)
	exit 1
	;;
*)
	die "blobio get pdf failed: exit status=$?" 3
	;;
esac

#  execute the java extract.  although we expect only 0 and no stderr,
#  0 with stderr is normal for pdfbox.
#  an exit status of 1 indicates a failed load of the pdf file.

java -server -cp $CLASSPATH putPDDocument <$TMP_BLOB >$TMP_ROW 2>$TMP_STDERR
STATUS=$?

#  insure at least file STDERR exists
test -e STDERR || die "write to temp failed: $TMP_STDERR"
test $STATUS = 0							||
	die "java putPDDocument failed: exit status=$STATUS"
	
#
#  pdf loaded and scalars extracted
#
#  Note:
#	are we reading UTF-8?
#	does read return error code?
#
read								\
	NUMBER_OF_PAGES						\
	DOCUMENT_ID						\
	VERSION							\
	IS_ALL_SECURITY_TO_BE_REMOVED				\
	IS_ENCRYPTED						\
<$TMP_ROW

$PSQL <<EOF || die "psql insert failed: exit status=$?" 7

INSERT INTO
  pdfbox.pddocument(
  	blob,
	number_of_pages,
	document_id,
	version,
	is_all_security_to_be_removed,
	is_encrypted
    ) VALUES (
    	'$UDIG',
	$NUMBER_OF_PAGES,
	$DOCUMENT_ID,
	$VERSION,
	$IS_ALL_SECURITY_TO_BE_REMOVED,
	$IS_ENCRYPTED
    ) ON CONFLICT
    	DO NOTHING
;

EOF

exit 0
