#!/usr/bin/env bash
#
#  Synopsis:
#	Trace a blob using the description records in schema/*/log/*.[fqx]dr
#  Usage:
#	trace-blow-flow btc20:b820bc72620f9e4578c6a5f50bc3205539dc65af 
#  Note:
#	TMPDIR must be absolute path.
#

PROG=$(basename $0)
TMPDIR=${TMPDIR:=/tmp}
WORK_DIR=$TMPDIR/$PROG-$$.d
KEEP_WORK_DIR=no

leave()
{
	cd
	if [ -d $WORK_DIR -a $KEEP_WORK_DIR = no ];  then
		rm -rf $WORK_DIR || echo "ERROR: rm -rf $WORK_DIR failed"
	fi
	exit $1
}

die()
{
	
	echo "$(basename $0): ERROR: $@" >&1
	leave 1
	exit 1
}

copy_dr()
{
	DR=$1
	SQL=$SETSPACE_ROOT/schema/mydash/lib/copy-trace_$DR.sql

	#  Note:  i wish xargs had the option --no-run-if-empty
	find . -name "*.$DR"						|
		xargs cat						|
		psql --quiet --file $SQL
	STATUS="${PIPESTATUS[*]}"
	test "$STATUS" = '0 0 0'					||
		die "copy_dr $DR failed: exit status=$STATUS"
}


trap 'leave 0' EXIT

PSQL='psql --no-psqlrc --quiet'

case $# in
1)
	BLOB=$1
	;;
2)
	BLOB=$1
	test "$2" = '--keep-work-dir' || die "unexpected argument: $2"
	KEEP_WORK_DIR=yes
	;;
*)
	die "wrong number of arguments: got $#, expected 1"
	;;
esac

test -d $WORK_DIR && die "another work dir exists: $WORK_DIR"
mkdir -p $WORK_DIR || die "mkdir work dir failed: exit status=$?: $WORK_DIR"

test -n "$SETSPACE_ROOT" || die 'environment var not defined: SETSPACE_ROOT'
SCHEMA_ROOT=$SETSPACE_ROOT/schema
cd $SCHEMA_ROOT || die "cd $SCHEMA_ROOT failed: exit status=$?"

#  grep description flow, executable or query description records

fgrep_dr()
{
	DR_TYPE=$1		#  fdr, xdr or qdr
	DR_SCHEMA=$2		#  schema

	test -e flowd.$DR_TYPE || return 0	#  at least one flowd file

	DR_LOG=$WORK_DIR/$DR_SCHEMA.$DR_TYPE

	#
	#  starting from the directory $SETSPACE_ROOT/schema/<schema-name>/log
	#  fgrep all records containing the blob digest into
	#
	#	$WORK_DIR/$SCHEMA.$DR_TYPE
	#

	find . -maxdepth 1 -type f -name "flowd*.$DR_TYPE"		|
		xargs fgrep -h $BLOB 					|
		sed "s/^/$SCHEMA	/" >$DR_LOG
	STATUS=${PIPESTATUS[*]}
	case "$STATUS" in
	'0 0 0'|'0 1 0')
		;;
	*)
		die "find | fgrep $DR_LOG failed: exit status=$STATUS"
		;;
	esac
	if [ $KEEP_WORK_DIR = no ];  then
		test -s $DR_LOG						||
			rm $DR_LOG					||
			die "rm empty dr failed: exit status=$?"
	fi
}

#  extract the *.[fqx]dr records contraining the blob
find-schema | while read SCHEMA;  do
	cd $SCHEMA_ROOT
	LOG=$SCHEMA/log
	test -d $LOG || die "schema log dir does not exist: $(pwd)/$LOG"
	cd $LOG || die "cd schema log failed: exit status=1: $LOG"

	fgrep_dr fdr $SCHEMA						&&
		fgrep_dr xdr $SCHEMA					&&
		fgrep_dr qdr $SCHEMA
	test $? = 0 || exit
done

cd $WORK_DIR || die "cd work dir failed: exit status=$?"
copy_dr fdr && copy_dr qdr && copy_dr xdr
