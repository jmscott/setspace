#!/bin/bash
#
#  Synopsis:
#	Merge all pages of pending pdf blob into table pdfbox2.page_tsv_utf8.
#  Usage:
#	 merge-pages_tsv_utf8 <ts_config> <pdf-udig>
#  Arguments:
#	1	text search configuration name
#   	2	udig of the pdf blob
#  Exit Status:
#   	0	ok, all pages merged
#	1	a page blob does not exist, but existing blobs commited
#   	2	wrong number of arguments
#	3	unexpected blobio error
#	4	unexpected postgresql error
#  See:
#	PostgreSQL table pdfbox2.pdf_page_tsv_utf8_pending.
#  Environment:
#	BLOBIO_SERVICE
#	BLOBIO_GET_SERVICE
#	TMPDIR
#  Note:
#	Can this script be replaced with an SQL in insert in pdfbox2.flow?
#  
PROG=merge-pages_tsv_utf8

SERVICE="--service ${BLOBIO_GET_SERVICE:=$BLOBIO_SERVICE}"
TMP_BLOB=${TMPDIR:=/tmp}/$PROG-$$.blob
TMP_PAGE=${TMPDIR:=/tmp}/$PROG-$$.page
EXIT_STATUS=0

die()
{
	STATUS=$2
	echo "$PROG: ERROR: $1" >&2
	exit $STATUS
}

leave()
{
	rm -f $TMP_BLOB $TMP_PAGE
}

trap leave EXIT

test $# = 2 || die 'wrong number of arguments' 2

TS_CONF=$1
PDF_UDIG=$2

#  select udig of page blobs into temp files

psql --quiet --no-psqlrc --field-separator='	' --tuples-only --no-align <<END
\\o $TMP_PAGE
select
	ep.pdf_blob,
	ep.page_number,
	ep.page_blob
  from
  	pdfbox2.extract_page_utf8 ep
	  left outer join pdfbox2.page_tsv_utf8 ppt on (
	  	ppt.pdf_blob = ep.pdf_blob
		and
		ppt.page_number = ep.page_number
		and
		ppt.ts_conf = '$TS_CONF'
	)
  where
  	ep.pdf_blob = '$PDF_UDIG'
	and
	ppt.pdf_blob is null
;
END
test $?=0 || die "psql failed: exit status=$?" 4

while read PDF_UDIG PAGE_NUMBER PAGE_UDIG;  do
	rm -f $TMP_BLOB || exit 3
	blobio get --udig $PAGE_UDIG --output-path $TMP_BLOB $SERVICE
	STATUS=$?
	case $STATUS in
	0)
		;;
	1)
		EXIT_STATUS=1
		continue
		;;
	*)
		die "blobio get failed: exit status=$STATUS" 3
		;;
	esac
	SIZE=$(file-stat-size $TMP_BLOB)
	merge-stdin-page_tsv_utf8 					\
		$TS_CONF						\
		$PDF_UDIG						\
		$PAGE_NUMBER						\
		$SIZE <$TMP_BLOB					||
			die "merge-stdin-page_tsv_utf8 failed: exit status=$?" 4
done <$TMP_PAGE
exit $EXIT_STATUS
