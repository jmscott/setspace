#
#  Synopsis:
#	Populate the schema "pdfbox" usng java code from pdfbox.apache.org
#  Description:
#	Populate following tables in schema "pdfbox"
#		pddocument
#		pddocument_information
#		extract_pages_utf8
#		page_text_utf8
#		page_tsv_utf8
#	
#  See:
#	pdfbox/lib/schema.sql
#  Note:
#	Faulting needs to be merged into this flow and not in bash scripts!
#

boot
{
	brr_capacity = 8;
	flow_worker_count = 4;
	os_exec_worker_count = 4;
	os_exec_capacity = 4;

	xdr_roll_duration = "24h";
	fdr_roll_duration = "24h";
	qdr_roll_duration = "24h";

	heartbeat_duration = "10s";
}

sql database setspace
{
	driver_name = "postgres";
	data_source_name =
		"fallback_application_name=pdfbox.flow sslmode=disable";
	max_idle_conns = 0;
	max_open_conns = 8;
}

tail brr
{
	#path = "support/resync/spool/fs.brr";
	path = "spool/prefixio.brr";
}

sync map first_seen_map[string]bool;

command first_seen
{
	path = "true";
}

sql query in_service row
{
	statement = `

	SELECT EXISTS (
	  SELECT
	  	blob
	    FROM
	    	setcore.service
	    WHERE
	    	blob = $1::udig
	);
	`;

	result row is (
		ok bool
	);
}

call first_seen(brr.udig)
  when
  	first_seen_map.LoadOrStore(brr.udig, true).loaded == false
	and
	#  is not an empty blob
	(
		brr.udig != "btc20:fd7b15dc5dc2039556693555c2b81b36c8deec15"
		and
		brr.udig != "sha:da39a3ee5e6b4b0d3255bfef95601890afd80709"
		and
		brr.udig != "bc160:b472a266d0bd89c13706a4132ccfb16f7c3b9fcb"
	)
;

query in_service(brr.udig)
  when
  	first_seen.exit_status == 0
;

#
#  determine if the pdf exists in either pddocument or pddocument_information
#  tables or is in fault.
#
#  if either pddocument{_information} fault, then we do not attempt to
#  extract pages.
#

sql query in_pddocs row
{
	statement = `

	SELECT
		--  does row exist in table pddocument?

		EXISTS (
		  SELECT
		  	blob
		    FROM
		    	pdfbox.pddocument
		    WHERE
		    	blob = $1::udig
		),

		--  is blob in fault for call to merge-pddocument?

		EXISTS (
		  SELECT
		  	blob
		    FROM
		    	setops.flowd_call_fault
		    WHERE
		    	schema_name = 'pdfbox'
			AND
		    	command_name = 'merge_pddocument'
			AND
		    	blob = $1::udig
		),

		--  does row exist in table pddocument_information?

		EXISTS (
		  SELECT
		  	blob
		    FROM
		    	pdfbox.pddocument_information
		    WHERE
		    	blob = $1::udig
		),

		--  is blob in fault for call to merge-pddocument_information?

		EXISTS (
		  SELECT
		  	blob
		    FROM
		    	setops.flowd_call_fault
		    WHERE
		    	schema_name = 'pdfbox'
			AND
		    	command_name = 'merge_pddocument_information'
			AND
		    	blob = $1::udig
		)
	;
	`;

	result row is (
		ok_doc		bool,
		flt_doc		bool,

		ok_info		bool,
		flt_info	bool
	);
}

query in_pddocs(brr.udig)
  when
  	in_service.ok == true
;

###
#
#  PDDocument
#
###
command merge_pddocument
{
	path = "merge-pddocument";

	exit_status is OK when in {
                0,      #  ok, extracted pddocument info and stored into db
                1       #  blob does not exist
        };
}

call merge_pddocument(brr.udig)
  when
  	in_pddocs.ok_doc == false
	and
  	in_pddocs.flt_doc == false
;

###
#
#  PDDocumentInformation
#
###
command merge_pddocument_information
{
	path = "merge-pddocument_information";
	exit_status is OK when in {
                0,      #  ok, extracted pddocument info and stored into PG
                1       #  blob does not exist
        };
}

call merge_pddocument_information(brr.udig)
  when
  	in_pddocs.ok_info == false
	and
  	in_pddocs.flt_info == false
;

###
#
#  ExtractPagesUTF8
#
###
command merge_extract_pages_utf8
{
	path = "merge-extract_pages_utf8";
	argv = (
		"english"
	);
	exit_status is OK when in {
                0      #  ok, extracted pddocument info and stored into PG
        };
}

#  determine if the pages of the pdf have been extracted.

sql query in_extract row
{
	statement = `

	SELECT
		--  extract_pages_utf8: does row exist in table

		EXISTS (
		  SELECT
		  	pdf_blob
		    FROM
		    	pdfbox.extract_pages_utf8
		    WHERE
		    	pdf_blob = $1::udig
		)
		OR
		EXISTS (
		  SELECT
		  	blob
		    FROM
		    	setops.flowd_call_fault
		    WHERE
		    	schema_name = 'pdfbox'
			and
		    	command_name = 'merge_extract_pages_utf8'
			AND
		    	blob = $1::udig
		)
	;
	`;

	result row is (
		ok		bool
	);
}

query in_extract(brr.udig)
  when
  	#  extract tables depend reference pddocument 
  	in_pddocs.ok_doc == true
	or
	in_pddocs.flt_doc == true
;

call merge_extract_pages_utf8(brr.udig)
  when
  	in_extract.ok == false
	or
	merge_pddocument.exit_status == 0
;
