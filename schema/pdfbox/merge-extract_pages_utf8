#!/bin/bash
#
#  Synopsis:
#	Extract all pages from pdf and merge into tables extract_page_utf8.
#  Usage:
#	merge-extract_pages_utf8 <pdf blob> english
#  Exit Status
#	0	pages merged ok
#	1	pdf blob not found
#	2	program invocation or setup error
#	3	unexpected blobio error
#	4	java ExtractPagesUTF8.class failed
#	5	sql error
#
#  Environment:
#	BLOBIO_SERVICE		#  required
#	BLOBIO_GET_SERVICE
#	BLOBIO_ALGORITHM
#	TMPDIR
#
#  Java Classes:
#	import org.apache.pdfbox.io.IOUtils;
#	import org.apache.pdfbox.pdmodel.PDDocument;
#	import org.apache.pdfbox.pdmodel.encryption.AccessPermission;
#	import org.apache.pdfbox.text.PDFTextStripper;
#  Note:
#	Only faults of java ExtractPagesUTF8 are logged.  What happens
#	if the sql insert fails?
#
#	Page blobs may be orphaned if the transaction if aborted.
#	Perhaps a json blob summarizing the transaction should be created.
#

PROG=merge-extract_pages_utf8
GET_SERVICE=${BLOBIO_GET_SERVICE:=$BLOBIO_SERVICE}
WORK_DIR=${TMPDIR:=/tmp}/$PROG.$$.d
ALGORITHM=${BLOBIO_ALGORITHM:=bc160}
PSQL='psql --quiet --no-psqlrc'

die()
{
	STATUS=$2
	echo "$PROG: ERROR: $1" >&2
	exit $STATUS
}

leave()
{
	STATUS=$?
	cd .. && rm -rf $WORK_DIR
	exit $STATUS
}

trap leave EXIT

test $# = 2 || die "wrong number of arguments: got $#, expected 2" 2
PDF_UDIG=$1
TS_CONF=$2

mkdir -p $WORK_DIR || die "mkdir work $WORK_DIR failed: exit status=$?" 2
cd $WORK_DIR || die "cd work $WORK_DIR failed: exit status=$?" 2

#  fetch the pdf blob into work directory

PDF=$PDF_UDIG.pdf
blobio get --udig $PDF_UDIG --output-path $PDF --service $GET_SERVICE
STATUS=$?

case $STATUS in
0)
	;;
1)
	exit 1
	;;
*)
	die "blobio get pdf failed: exit status=$?" 3
	;;
esac

#  let pdfbox extract individual pages into files 0000001.txt, 0000002.txt ...
#  write digest for page in 0000001.udig, 0000002.udig

java 									\
	-server								\
	-cp $CLASSPATH							\
	ExtractPagesUTF8						\
	<$PDF 2>STDERR
EXIT_STATUS=$?
test -e $STDERR || die "java write to stderr failed" 
cat STDERR >&2

#  log the fault of the java invocation, including stderr.
if [ $EXIT_STATUS != 0 ];  then
	if [ -s $STDERR ];  then
		STDERR_UDIG=$ALGORITHM:$(
			blobio eat					\
				--algorithm $ALGORITHM			\
				--input-path $STDERR
		)
		test $? = 0 || die "blobio eat stderr failed: exit status=$?"

		blobio put						\
			--udig $STDERR_UDIG				\
			--input-path $STDERR				\
			--service $BLOBIO_SERVICE			||
			die "blobio put stderr failed: exit status=$?" 3
	else
		STDERR_UDIG=$ALGORITHM:$(blobio empty --algorithm $ALGORITHM)
	fi
	$PSQL <<END || die "psql insert fault failed: exit status=$?" 5
INSERT INTO pdfbox.fault_extract_pages_utf8 (
	blob,
	exit_status,
	stderr_blob
) VALUES (
	'$UDIG',
	$EXIT_STATUS,
	'$STDERR_UDIG'
  ) ON CONFLICT
  	DO NOTHING
;
END
	die "java ExtractPagesUTF8 failed: exit status=$EXIT_STATUS" 4
fi

#  loop through the page files to put the blobs and record udigs in <page>.udig

find . -maxdepth 1 -name '[0-9][0-9][0-9][0-9][0-9][0-9][0-9].txt' -type f   |
  while read PAGE_PATH;  do

	#  calculate the digest of the page of text

	PAGE_UDIG=$ALGORITHM:$(
		blobio eat						\
			--input-path $PAGE_PATH				\
			--algorithm $ALGORITHM
	)
	test $? = 0 || die "blobio eat page text failed: exit status=$?" 3

	#  put the page of text to blob storage

	blobio put							\
		--input-path $PAGE_PATH					\
		--udig $PAGE_UDIG					\
		--service $BLOBIO_SERVICE				||
		die "blobio put page failed: exit status=$?" 3

	UDIG_PATH=$(basename $PAGE_PATH .txt).udig
	echo $PAGE_UDIG >$UDIG_PATH ||
				die "echo udig > failed: exit status=$?" 2
done
STATUS=${PIPESTATUS[*]}
case "$STATUS" in
'0 0')
	;;
'0 2')
	exit 2
	;;
'0 3')
	exit 3
	;;
*)
	die "find | page text failed: exit status=$STATUS" 2
	;;
esac

#  sql merge all pages, text, tsf in database in a single transaction

merge-all-extract_pages_utf8 $PDF_UDIG $TS_CONF ||
	die "merge-all-extract_pages_utf8 failed: exit status=$?" 5
