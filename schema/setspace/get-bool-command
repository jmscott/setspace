#!/bin/bash
#
#  Synopsis:
#	Invoke boolean command $1 sending the blob with udig $2 to command
#  Usage:
#	get-bool-command <command> <blob udig>
#  Exit Status:
#  	0	bool command exited 0
#	1	bool command exited 1
#	2	blob is empty
#	3	blob does not exist
#  	4	wrong number of command line arguments
#	5	blobio get failed for unknown reason
#	6	command failed for unknown reason: exit status not in {0, 1, 2} 
#  Environment:
#	BLOBIO_RO_SERVICE
#  Note:
#	Not clear if forcing the sematics of an empty blob up to this script
#	is the best approach.
#
PROG='get-bool-command'
COMMAND=

TMP_BLOB=${TMPDIR:=/tmp}/$PROG.$$

die()
{
	case "$COMMAND" in
	'')
		MSG="$1"
		;;
	*)
		MSG="$COMMAND: $1"
		;;
	esac
	echo "$PROG: ERROR: $MSG" >&2
	exit $2
}

leave()
{
	rm -f $TMP_BLOB
	exit
}

trap leave EXIT INT TERM QUIT

test $# = 2 || die 'wrong number of arguments' 4
COMMAND=$1
BLOB=$2

#  fetch the blob into temp file

blobio get --service $BLOBIO_RO_SERVICE --udig $BLOB --output-path $TMP_BLOB
STATUS=$?
case $STATUS in
0)
	;;
1)
	blobio empty --udig $BLOB && exit 2
	exit 3
	;;
*)
	die "blobio get failed: exit status=$STATUS" 5
	;;
esac

$COMMAND <$TMP_BLOB
STATUS=$?
case $STATUS in
0|1|2)
	;;
*)
	die "command $COMMAND failed: exit status=$STATUS" 6
	;;
esac
exit $STATUS
