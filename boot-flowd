#!/bin/bash
#
#  Synopsis:
#	Startup a flowd server against a particular schema
#  Usage:
#	boot-flowd <schema>
#	boot-flowd setspace
#  See:
#	cron-reboot
#  Exit Status:
#	0	flowd appears to have booted
#	1	no profile or flow file in directory <schema>/etc/<schema>.flow
#	2	unknown error, flowd may not have started
#  Note:
#	Call jmscott/bin/zap-proc to force process exit before proceeding.
#

PROG=$(basename $0)

FLOWD_PAUSE=3
FLOWD_PAUSE_LIMIT=6
SCHEMA=

log()
{
	MSG=$@
	test -n "$SCHEMA" && MSG="$SCHEMA: $MSG"
	echo "$(date +'%Y/%m/%d %H:%M:%S'): $MSG"
}

WARN()
{
	log "WARN: $@" >&2
}

die()
{
	log "ERROR: $@" >&2
	exit 2
}

leave()
{
	log 'good bye, cruel world'
}

test $# = 1 || die 'wrong number of arguments'

log 'hello, world'
trap leave EXIT
log "schema: $1"
SCHEMA=$1

log "flowd pause: $FLOWD_PAUSE"

test -n "$SETSPACE_ROOT" || die "env variable not defined: SETSPACE_ROOT"
log "SETSPACE_ROOT=$SETSPACE_ROOT"

cd $SETSPACE_ROOT || die "cd $SETSPACE_ROOT failed"

. etc/profile

SCHEMA_ROOT=$SETSPACE_ROOT/schema/$SCHEMA
log "schema root: $SCHEMA_ROOT"
test -d $SCHEMA_ROOT || die "schema dir does not exist: $SCHEMA_ROOT"

cd $SCHEMA_ROOT || die "cd $SCHEMA_ROOT failed: exit status=$?"

test -e etc/profile || die "no schema profile: $(pwd)/etc/profile"

log "sourcing $(pwd)/etc/profile"
. etc/profile

FLOW=etc/$SCHEMA.flow
log "flowd file: $FLOW"
test -e $FLOW || die "no flow file: $FLOW"

RUN_PID=run/flowd.pid
test -e $RUN_PID &&
	die "run/flowd.pid exists: is another flowd running #$(cat $RUN_PID)"
find run -name '*.lock' | while read LOCK;  do
	log "WARN: removing lock file: $LOCK"
	rm -f $LOCK || die "rm -f $LOCK failed: exit status=$?"
done

log "starting flowd server: $FLOW"
flowd server $FLOW &
PID=$!
log "flowd started in background: pid=$PID"

#  wait for flowd to generate a pid file

PAUSE=$FLOWD_PAUSE
log "pausing $PAUSE seconds while server starts ..."
sleep $PAUSE

test -e $RUN_PID || die "flowd boot failed: no pid file: $FLOW"

log "log file: $(pwd)/log/flowd-$(date '+%a').log"

exit 0
