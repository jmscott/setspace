/*
 *  Synopsis:
 *  	Merge an UTF8 blob read on standard input into table pdfbox2.tsv_utf8
 *  Usage:
 *	merge-stdin-tsv_utf8 
 *  Arguments:
 *  	1	udig of the blob
 *	2	name of text search configuration
 *  	3	number of bytes to read on the standard input
 *  Exit Status:
 *  	0	ok, tuple was merged
 *  	1	Wrong number of arguments
 *  	2	Incorrect blob size
 *  	3	malloc() of utf8 buffer failed
 *	4	read() of standard input failed
 *	5	syntax error on udig
 *	6	sql error
 *	7	sql warning
 *	8	blob too small
 *	9	blob too large
 *  Blame:
 *  	jmscott@setspace.com
 *  	setspace@gmail.com
 *  Note:
 *	Should tsvector config be passed as an argument oncommand line?
 *
 *	Think about refactoring common routines in ../../sql-common.h
 */

static char progname[] = "merge-stdin-tsv_utf8";

#define EXIT_OK		0
#define EXIT_BAD_ARGC	1
#define EXIT_BAD_SIZE	2
#define EXIT_BAD_MALLOC 3
#define EXIT_BAD_READ	4
#define EXIT_BAD_UDIG	5
#define EXIT_SQLERROR	6
#define EXIT_SQLWARN	7
#define EXIT_BLOB_SMALL 8
#define EXIT_BLOB_BIG	9

#define COMMON_NEED_READ_BLOB
#include "../../common.c"

#define COMMON_ECPG_NEED_SQL_FAULT
#include "../../common-ecpg.c"

#include <stdlib.h>

int
main(int argc, char **argv)
{
	int size;
	size_t len;
	char *sz;

EXEC SQL BEGIN DECLARE SECTION;
	char *blob;
	char *doc;
	char *ts_conf;
EXEC SQL END DECLARE SECTION;

	if (argc != 4)
		die(EXIT_BAD_ARGC, "wrong number of arguments");

	close(1);

	//  parse the udig as argv[1]
	blob = argv[1];
	len = strlen(blob);
	if (len < 3 || len > 255 || strchr(blob, ':') == NULL)
		die2(EXIT_BAD_UDIG, "syntax error in utf8 udig", blob);

	// the text search configuration
	ts_conf = argv[2];

	//  parse the blob size as argv[3]
	sz = argv[3];
	len = strlen(sz);
	if (len < 1 || len > 19)
		die2(EXIT_BAD_SIZE, "blob size not > 0 and < 20 chars", sz);

	//  need to validate that all chars are decimal digits
	size = atoi(sz);
	if (size <= 0)
		die2(EXIT_BAD_SIZE, "atoi(blob size) <= 0", sz);

	//  allocate the utf8 buffer plus null byte
	doc = malloc(size + 1);
	if (doc == NULL)
		die2(EXIT_BAD_MALLOC, "malloc() failed", sz);
	doc[size] = 0;

	_read_blob(0, doc, size);

	exec sql whenever sqlerror call _ecpg_sql_fault();
	exec sql whenever sqlwarning call _ecpg_sql_fault();
	exec sql connect to default;

	/*
	 *  Merge blob into pdfbox2.tsv_doc table.
	 */
	exec sql
	  INSERT INTO pdfbox2.tsv_utf8(
		blob,
		ts_conf,
		doc
	  ) VALUES (
		:blob::udig,
		:ts_conf::regconfig,
		to_tsvector(:ts_conf::regconfig, :doc)
	  )
  	  ON CONFLICT
  		DO NOTHING
	;

	_exit(EXIT_OK);
}
