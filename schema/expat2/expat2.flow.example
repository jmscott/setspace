#
#  Synopsis:
#	Populate th expat2 postgresql database schema
#  See:
#	schema/expat2/schema.sql
#

boot
{
	brr_capacity = 256;
	flow_worker_count = 16;
	os_exec_worker_count = 12;
	os_exec_capacity = 12;

	xdr_roll_duration = "24h";
	fdr_roll_duration = "24h";
	qdr_roll_duration = "24h";

	heartbeat_duration = "10s";
}

tail brr
{
	path = "spool/setspace.brr";
}

sql database setspace
{
	driver_name = "postgres";
	data_source_name = "sslmode=disable";
	max_idle_conns = 1;
	max_open_conns = 4;
}

sql query in_is_xmlwf_table row
{
	statement = `

	SELECT exists (
	  select
	  	blob
	    from
	    	expat2.is_xmlwf
	    where
	    	blob = $1::udig
	),
	(SELECT
		is_xml
	  from
	    	expat2.is_xmlwf
	  where
	    	blob = $1::udig
	)
	`;

	result row is (
		answer bool,
		is_xml bool
	);
}

query in_is_xmlwf_table(brr.udig);

command get_is_xmlwf
{
	path = "sbin/get-is_xmlwf";
	exit_status is OK when in {
		0,			#  command is true
		1,			#  command is false
		2			#  blob does not exist
	};
}

call get_is_xmlwf(brr.udig)
  when
  	in_is_xmlwf_table.answer == false
;

sql query merge_is_xmlwf row
{
	statement = `

	INSERT into expat2.is_xmlwf(
		blob,
		is_xml
	) SELECT
		$1::udig,
		case $2 
	  		when '0' then true
	  		when '1' then false
		end as "is_xml"
	  ON CONFLICT
		do nothing
  	  RETURNING
  		"is_xml"
	`;

	result row is (
		is_xml bool
	);
}

query merge_is_xmlwf(brr.udig, get_is_xmlwf.exit_status)
  when
  	get_is_xmlwf.exit_status == 0
	or
	get_is_xmlwf.exit_status == 1
;

command append_libxml2_brr
{
	path = "append-brr";
	argv = (
		"../libxml2/spool/expat2.brr"
	);
}

call append_libxml2_brr(
	brr.start_time,
	brr.netflow,
	brr.verb,
	brr.udig,
	brr.chat_history,
	brr.blob_size,
	brr.wall_duration
) when
	in_is_xmlwf_table.is_xml == true
	or
	merge_is_xmlwf.is_xml == true
;
