#
#  Synopsis:
#	Kill a flowd process for a schema, possibly going nuclear
#  Usage:
#	kill-flowd <schema>
#  Exit Status:
#	0	running flowd process was killed or process not running
#	32	unexpected error
#  Blame:
#  	jmscott@setspace.com
#  	setspace@gmail.com
#  Note:
#	Think about overriding name of SETSPACE_ROOT by consulting a variable
#	named SETSPACE_ROOT_NAME.  Will be helpfull for non setspace
#	schemas that wish to manage flowd process.
#

PROG=$(basename $0)

#  pause after either stopping or starting flowd

FLOWD_PAUSE=2

log()
{
	MSG=$@
	test -n "$SCHEMA" && MSG="$SCHEMA: $MSG"
	echo "$(date +'%Y-%m-%d %H:%M:%S'): $PROG: $MSG"
}

WARN()
{
	log "WARN: $@" >&2
}

die()
{
	log "ERROR: $@" >&2
	exit 2
}

leave()
{
	log 'good bye, cruel world'
}

test $# = 1 || die 'wrong number of arguments'
SCHEMA=$1

log 'hello, world'
trap leave EXIT

test -n "$SETSPACE_ROOT" ||
			die "environment variable not defined: SETSPACE_ROOT"
log "SETSPACE_ROOT=$SETSPACE_ROOT"

cd "$SETSPACE_ROOT" || die "cd $SETSPACE_ROOT failed"
. etc/profile

#  goto to root of schema directory in $SETSPACE_ROOT/schema/$SCHEMA
#  source in a local etc/profile for the schema

SCHEMA_ROOT=schema/$SCHEMA
test -d "$SCHEMA_ROOT" || die "missing schema dir: $SCHEMA_ROOT"
cd $SCHEMA_ROOT || die "cd $SCHEMA_ROOT failed: exit status=$?"
test -e etc/profile && . etc/profile

test -d run || die "missing run directory: $(pwd)/run/"

#  check for pid file of flowd process

FLOWD_PID=run/flowd.pid
zap-proc $FLOWD_PID
STATUS=$?
case $STATUS in
0)
	log 'flowd killed'
	;;
1)
	log 'pid file does not exist'
	;;
*)
	die "zap-proc failed: exit status=$STATUS"
	;;
esac
