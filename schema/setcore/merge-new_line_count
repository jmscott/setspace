#!/usr/bin/env bash
#
#  Synopsis:
#	Upsert the new-line count of a blob into the table new_line_count
#  Usage:
#	upsert-new_line_count <udig>
#  Exit Status:
#  	0	byte count upserted into table new_line_count
#	1	blob does not exist
#	2	unknown error
#  Environment:
#	BLOBIO_SERVICE
#	BLOBIO_GET_SERVICE
#	PG* variables
#	TMPDIR
#  Note:
#	Consider pipelining blobs to eliminate dependence on TMPDIR.
#
PROG=upsert-new_line_count
BLOBIO_GET_SERVICE=${BLOBIO_GET_SERVICE:=$BLOBIO_SERVICE}

TMP_BLOB=${TMPDIR:=/tmp}/$PROG.$$

die()
{
	echo "$PROG: ERROR: $1" >&2
	exit 2
}

leave()
{
	rm -f $TMP_BLOB
	exit
}

trap leave EXIT INT TERM QUIT

test $# = 1 || die 'wrong number of arguments'
BLOB=$1

#  fetch the blob into temp file

blobio get --service $BLOBIO_GET_SERVICE --udig $BLOB --output-path $TMP_BLOB
STATUS=$?
case $STATUS in
0)
	;;
1)
	exit 1
	;;
*)
	die "blobio get failed: exit status=$STATUS"
	;;
esac

COUNT=$(new-line-count <$TMP_BLOB)
test $? = 0 || die "new-line-count failed: exit status=$?"

psql --set blob=$BLOB --set count=$COUNT --quiet --no-psqlrc <<END
INSERT INTO setcore.new_line_count (
	blob,
	line_count
  ) VALUES (
  	:'blob'::udig,
	:'count'
  ) ON CONFLICT
  	DO NOTHING
;
END
test $? = 0 || die "psql insert failed: exit status=$?"

exit 0
