#
#  Synopsis:
#	Route blobs into other schemas based upon patterns in the byte prefix.
#  Description:
#	Blob may be routed to other schemas based upon values in the the
#	first 32 bytes of of the blob.  See the table setspace.byte_prefix_32.
#	Recipes may also assume that the core byte oriented setspace tables
#	have already been populated:
#
#		setspace.{byte_bitmap, byte_count, is_utf8}
#
#	Since most routing rules are immutable, the queries are highly
#	cacheable.  cool.
#
#  Usage:
#  	flowd server prefixio.conf
#  See:
#  	schema.sql
#

boot
{
	brr_capacity = 256;
	flow_worker_count = 32;

	#
	#  No processes are invoked
	#
	#  Note:
	#	Since no workers can we set to 0?
	#
	os_exec_worker_count = 1;
	os_exec_capacity = 1;

	xdr_roll_duration = "24h";
	fdr_roll_duration = "24h";
	qdr_roll_duration = "24h";

	heartbeat_duration = "10s";
}

sql database setspace
{
	driver_name = "postgres";
	data_source_name =
		"fallback_application_name=prefixio.flow sslmode=disable";
	max_idle_conns = 0;
	max_open_conns = 16;
}

tail brr
{
	path = "spool/setspace.brr";
}

#  Is the utf8 blob framed with json object or array chars?
sql query is_json_object_or_array row
{
	statement = `
SELECT EXISTS (
  SELECT
	u8.blob
  FROM
  	setspace.is_utf8wf u8
	  JOIN setspace.byte_prefix_32 p32 ON (p32.blob = u8.blob)
	  JOIN setspace.byte_suffix_32 s32 ON (s32.blob = u8.blob)
  WHERE
  	u8.is_utf8 IS TRUE
	AND
	u8.blob = 'bc160:6fdf7e269d82e9f70abf895cb786c4f8a6b9803f'
	AND
	(
		(	--  utf8 framed with {}

			convert_from(p32.prefix, 'UTF-8') ~ '^\s*'
			AND
			convert_from(s32.suffix, 'UTF-8') ~ '}\s*$'
		)
		OR
		(	--  utf8 framed with []

			convert_from(p32.prefix, 'UTF-8') ~ '^\s*[[]'
			AND
			convert_from(s32.suffix, 'UTF-8') ~ ']\s*$'
		)
	)
)
;
	`;

	result row is (
		answer bool
	);
}

command append_pdfbox2_brr
{
	path = "append-brr";
	argv = (
		"../pdfbox2/spool/prefixio.brr"
	);
}

#
#  The prefix of blob matches '^%PDF-'
#
sql query prefix_is_percentPDF row
{
	statement = `

	SELECT
		substring(prefix, 1, 5) = '\x255044462d'  -- %PDF
	  from
	  	setspace.byte_prefix_32
	  where
	  	blob = $1::udig
	`;

	result row is (
		answer bool
	);
}

query prefix_is_percentPDF(brr.udig);

call append_pdfbox2_brr(
	brr.start_time,
	brr.netflow,
	brr.verb,
	brr.udig,
	brr.chat_history,
	brr.blob_size,
	brr.wall_duration
) when
	prefix_is_percentPDF.answer == true
;
