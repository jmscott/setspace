#!/usr/bin/env bash
#
#  Synopsis:
#	Extract the PDDocument scalars from PDF and upsert into PostgreSQL
#  Usage:
#	upsert-pddocument <udig>
#  Exit Status:
#	0	ok, extracted pddocument info and stored into PostgreSQL
#	1	pdf blob does not exist
#	2	unexpected error
#  Environment:
#	BLOBIO_SERVICE
#	BLOBIO_GET_SERVICE
#	TMPDIR
#  Note:
#	Need to insure putPDDocument always writes utf8 and not utf16!
#

PROG=upsert-pddocument
PSQL='psql
	--no-psqlrc							
	--quiet								
	--no-readline							
	--set=ON_ERROR_STOP=1
	--pset null=null
'
SQL=$SETSPACE_SCHEMA_ROOT/lib/$PROG.sql
SERVICE="--service ${BLOBIO_GET_SERVICE:=$BLOBIO_SERVICE}"
WORK_DIR=${TMPDIR:=/tmp}/$PROG-$$.d

leave()
{
	rm -fr "$WORK_DIR"						||
		echo "$PROG: ERROR: rm work dir failed: exit status=$?" >&2
}

die()
{
	test -s STDERR && cat STDERR >&2
	test -s STDOUT && echo "$PROG: WARN: stdout is not empty" >&2
	echo "$PROG: ERROR: $@" >&2
	exit 2
}

jdie()
{
	die "java putPDDocument: $@"
}

test $# = 1 || die "wrong number of arguments: got $#, need 1"
PDF_UDIG=$1
UDIG="--udig $PDF_UDIG"

trap leave EXIT
trap '' PIPE

mkdir $WORK_DIR || die "mkdir failed: $WORK_DIR"
cd $WORK_DIR || die "cd work dir failed: exit status=$?"

#  fetch the pdf blob

blobio get $UDIG $SERVICE --output-path BLOB
STATUS=$?
case $STATUS in
0)
	;;
1)
	exit 1
	;;
*)
	die "blobio get pdf failed: exit status=$?"
	;;
esac

#  execute the java extract.  although we expect only 0 and no stderr,
#  0 with output to stderr is normal for pdfbox.
#  an exit status of 1 indicates a failed load of the pdf file

java -server -cp $CLASSPATH putPDDocument <BLOB >ROW 2>STDERR
STATUS=$?
#  insure at least file STDERR exists

test -e STDERR || die "write to temp failed: STDERR"
test -e ROW || die "write to temp failed: ROW"

case $STATUS in
0)
	;;
2)
	jdie 'load of pdf failed: exit status=2'
	;;
3)
	jdie 'invocation error: exit status=3'
	;;
4)
	jdie 'unexpected java exception: exit status=4'
	;;
*)
	jdie "impossible java exit status: $STATUS"
	;;
esac

test $STATUS = 0 || die "putPDDocument failed: exit status=$STATUS"
test -s ROW || die 'ROW of putPDDocument is empty'

#
#  pdf loaded and scalars extracted
#
#  Note:
#	are we reading UTF-8?
#	does read return error code?
#
read								\
	NUMBER_OF_PAGES						\
	DOCUMENT_ID						\
	VERSION							\
	IS_ALL_SECURITY_TO_BE_REMOVED				\
	IS_ENCRYPTED						\
<ROW

test $DOCUMENT_ID = null && DOCUMENT_ID=-1 

$PSQL --file $SQL						\
	--set blob=$PDF_UDIG					\
	--set np=$NUMBER_OF_PAGES				\
	--set did=$DOCUMENT_ID					\
	--set ver=$VERSION					\
	--set secrm=$IS_ALL_SECURITY_TO_BE_REMOVED		\
	--set ienc=$IS_ENCRYPTED					||
		die "psql upsert failed: exit status=$?"

exit 0
