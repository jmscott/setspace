#!/usr/bin/env bash
#
#  Synopsis:
#	Command line front end to sql queries for all schemas.
#  Usage:
#	ssq			#  help
#	ssq ls			#  list all schemas
#	ssq service <udig>	#  check of <schema>.service for udig
#	ssq setcore help	#  help for "setcore" schema
#	ssq jsonorg help	#  help for "jsonorg" schema
#	ssq <schema> help	#  help for <schema>
#  Note:
#	In help() why are tabs aligned in vi but not in cat of message?
#
PROG=$(basename $0)

die()
{
	cat >&2 <<END
ERROR: $@
usage: ssq [help | ls | service | [<schema>] [...options]]
END
	exit 1
}

help()
{
	cat <<END
Usage:
	$PROG <schema> ...	#  query on a schema
	$PROG <schema> help	#  help for queries on this schema
	$PROG ls			#  list queryable schemas
	$PROG service <udig>	#  trace a blob through schemas service tables

	$PROG [help|--help]	#  ...
END
}

#  help message
if [ $# = 0 -o \( $# = 1 -a \( "$1" = help -o "$1" = --help \) \) ];  then
	help
	exit 0
fi

test -n "$SETSPACE_ROOT" || die "env not defined: SETSPACE_ROOT"
cd $SETSPACE_ROOT || die "cd failed: $SETSPACE_ROOT"
test -r etc/profile && . etc/profile

ACTION="$1"
shift

case "$ACTION" in
service|ls)
	exec libexec/ssq-$ACTION $@
	;;
[a-z_]*)
	;;
*)
	die "unknown action: $ACTION"
	;;
esac

SCHEMA=$ACTION
SCHEMA_DIR=schema/$SCHEMA
test -d $SCHEMA_DIR || die "not a schema: $SCHEMA"
cd $SCHEMA_DIR || die "cd $SCHEMA_DIR/ failed: exit status=$?"

SCHEMA_EXEC=libexec/ssq-$SCHEMA
test -e $SCHEMA_EXEC || die "no exec for schema: $SCHEMA"
test -x $SCHEMA_EXEC || die "libexec not executable: $SCHEMA_EXEC"
exec $SCHEMA_EXEC $@
