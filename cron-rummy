#!/bin/bash
#
#  Synopsis:
#	Cron jobs to "get" all blobs with undiscovered facts.
#  Usage:
#	* * * * * cron-rummy '-1 week' >>log/cron-rummy.log 2>&1
#  Exit Status:
#	0	ok
#	1	failed
#  Note:
#	A nice addition would be to display/log the discover time of each
#	gotten blob.
#

PROG=cron-rummy
TMP_RUMMY=${TMPDIR:=/tmp}/$PROG-$$.udig

log()
{
	echo "$(date +'%Y/%m/%d %H:%M:%S'): $@"
}

die()
{
	log "ERROR: $@" >&2
	exit 1
}

leave()
{
	rm -f $TMP_RUMMY
	log 'good bye, cruel world'
	exit
}
trap leave EXIT

log 'hello, world'

test $# = 1 || die 'wrong number of arguments'
SINCE="$1"

test -n "$SETSPACE_ROOT" || die 'env var not defined: SETSPACE_ROOT'
cd $SETSPACE_ROOT || die "cd $SETSPACE_ROOT failed"
log "SETSPACE_ROOT=$SETSPACE_ROOT"

log "since: $SINCE"

. etc/profile

log 'finding rummy udigs across all schemas ...'

rummy "$SINCE" >$TMP_RUMMY || die "rummy failed: exit status=$?"
RC=$(wc -l $TMP_RUMMY | awk '{print $1}')
log "getting $RC rummied udigs"

#  track ok/no count in global array

declare -a ok_no
ok_no[0]=0;
ok_no[1]=0;

while read U;  do
	blobio get --udig $U --service $BLOBIO_SERVICE >/dev/null
	STATUS=$?
	case $STATUS in
	0)
		log "<$U"
		ok_no[0]=$(expr ${ok_no[0]} + 1)
		;;
	1)
		log "?$U"
		ok_no[1]=$(expr ${ok_no[1]} + 1)
		;;
	*)
		die "blobio get $U failed: exit status=$STATUS"
		;;
	esac
done <$TMP_RUMMY
log "ok count: ${ok_no[0]}"
log "no count: ${ok_no[1]}"
