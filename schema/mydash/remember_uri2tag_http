#!/usr/bin/env perl
#
#  Synopsis:
#	Convert remember_uri rows into json requests for tag_http.
#  Usage:
#	psql -f select-remember_uri.sql | head -1 | remember_uri2tag_http
#  See Also:
#	select-remember_uri.sql
#

#  Code lifted from JSON-Tiny
my %ESCAPE = (
	'"'     => '"',
	'\\'    => '\\',
	'b'     => "\x08",
	'f'     => "\x0c",
	'n'     => "\x0a",
	'r'     => "\x0d",
	't'     => "\x09",
	'u2028' => "\x{2028}",		#  unicode line-separator
	'u2029' => "\x{2029}"		#  unicode paragraph-separator
);

my %REVERSE = map { $ESCAPE{$_} => "\\$_" } keys %ESCAPE;

for(0x00 .. 0x1f) {
	my $packed = pack 'C', $_;
	$REVERSE{$packed} = sprintf '\u%.4X', $_
			unless defined $REVERSE{$packed};
}

sub utf82json_string
{
	my $str = shift;
	$str =~ s!([\x00-\x1f\x{2028}\x{2029}\\"])!$REVERSE{$1}!gs;
	return "\"$str\"";
}

die 'wrong number of arguments' unless @ARGV == 0;

while (<STDIN>) {
	my ($blob, $url, $title, $host, $discover_unix_epoch) = split("\t");

	die "field #1: blob: not a udig: $blob"
		unless $blob =~ m/^[a-z][a-z0-9]{0,7}:[[:graph:]]{32,128}$/;
	die "field #2: url: does not begin with http(s)?: $url"
					unless $url =~ m/^http(?:s)?/i;
	die "field #3: title: longer than 1023 chars: $title"
					unless length($title) < 1024; 
	die "field #3: title: must contain a graphic character: $title"
			unless length($title) == 0 || $title =~ m/[[:graph:]]/;
	die "field #4: host: length < 255 chars: $host"
					unless length($host) < 255;	
	die "field #4: host: missing graphic char: $host"
					unless $host =~ m/[[:graph:]]/;

	#  Note: not fully match time: 2012-10-18 16:59:21.747884-05
	die "field #5: discover_unix_epoch: not digits: $discover_unix_epoch"
				unless $discover_unix_epoch =~ m/^\d{10}$/;
	$blob = utf82json_string($blob);
	$url = utf82json_string($url);
	$title = utf82json_string($title);
	$host = utf82json_string($host);
	print <<END;
{
	"mydash.schema.setspace.com": {
		"tag-http": {
			"url": $url,
			"title": $title,
			"discover-unix-epoch": $discover_unix_epoch
		},
		"host": $host
	},
	"note": "generated by jmscott using script remember_uri2tag_http"
}
END
}
