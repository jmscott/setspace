#!/bin/bash
#
#  Synopsis:
#	Extract the PDDocument scalars from PDF and merge into PostgreSQL
#  Usage:
#	merge-pddocument <udig>
#  Exit Status:
#	0	ok, extracted pddocument info and stored into PostgreSQL
#	1	pdf load failed
#	2	blob does not exist
#	3	script invocation error 
#	4	unexpected blobio error
#	5	unexpected java putPDDocument failed
#	6	pg database error
#  Environment:
#	BLOBIO_SERVICE
#	BLOBIO_GET_SERVICE
#	TMPDIR
#  Note:
#	How do we know the output of putPDDocument is always UTF-8?
#

PROG=merge-pddocument
GET_SERVICE=${BLOBIO_GET_SERVICE:=$BLOBIO_SERVICE}
TMPDIR=${TMPDIR:=/tmp}
PSQL='psql --no-psqlrc --quiet'
ALGORITHM=${BLOBIO_ALGORITHM:=bc160}

TMP_BLOB=$TMPDIR/$PROG-$$.pdf
TMP_ROW=$TMPDIR/$PROG-$$.row
TMP_STDERR=$TMPDIR/$PROG-stderr.$$.out

leave()
{
	rm -f $TMP_BLOB $TMP_ROW $TMP_STDERR
}
trap leave EXIT

die()
{
	STATUS=$2
	echo "$PROG: ERROR: $1" >&2
	exit $STATUS
}

ERROR()
{
	echo "$PROG: ERROR: $@" >&2
}

test $# = 1 || die "wrong number of arguments: got $#, expected 1" 3
UDIG=$1

#  fetch the pdf blob

blobio get --udig $UDIG --output-path $TMP_BLOB --service $GET_SERVICE
STATUS=$?
case $STATUS in
0)
	;;
1)
	exit 2
	;;
*)
	die "blobio get pdf failed: exit status=$?" 4
	;;
esac

#  execute the java extract.  although we expect only 0 and no stderr,
#  0 with stderr is normal.  an exit status of 1 indicates a failed load
#  of the pdf file.

java -cp $CLASSPATH putPDDocument <$TMP_BLOB >$TMP_ROW 2>$TMP_STDERR
EXIT_STATUS=$?
test -e $TMP_STDERR || die "write to temp failed: $TMP_STDERR" 5
cat $TMP_STDERR >&2

if [ $EXIT_STATUS != 0 ];  then
	if [ -s $TMP_STDERR ];  then
		STDERR_UDIG=$ALGORITHM:$(
			blobio eat 					\
				-algorithm $ALGORITHM			\
				--input-path $TMP_STDERR
		)
		blobio put						\
			--udig $STDERR_UDIG				\
			--input-path $TMP_STDERR			\
			--service $BLOBIO_SERVICE			||
			die "blobio put stderr failed: exit status=$?" 4
	else
		STDERR_UDIG=$(blobio empty --algorithm $ALGORITHM)
	fi
	$PSQL <<END || die "psql insert fault failed: exit status=$?" 6
INSERT INTO pdfbox.fault_pddocument (
	blob,
	exit_status,
	stderr_blob
) VALUES (
	'$UDIG',
	$EXIT_STATUS,
	'$STDERR_UDIG'
) ON CONFLICT
	DO NOTHING
;
END
	test $EXIT_STATUS = 2 || die "java failed: exit status=$EXIT_STATUS" 5
	exit 1
fi

#  pdf loaded and scalars extracted
#  Note: are we reading UTF-8?

read								\
	NUMBER_OF_PAGES						\
	DOCUMENT_ID						\
	VERSION							\
	IS_ALL_SECURITY_TO_BE_REMOVED				\
	IS_ENCRYPTED						\
<$TMP_ROW

$PSQL <<EOF || die "psql insert failed: exit status=$?" 7

INSERT INTO
  pdfbox.pddocument(
  	blob,
	number_of_pages,
	document_id,
	version,
	is_all_security_to_be_removed,
	is_encrypted
    ) VALUES (
    	'$UDIG',
	$NUMBER_OF_PAGES,
	$DOCUMENT_ID,
	$VERSION,
	$IS_ALL_SECURITY_TO_BE_REMOVED,
	$IS_ENCRYPTED
    ) ON CONFLICT
    	DO NOTHING
;

EOF

exit 0
