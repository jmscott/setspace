/*
 *  Synopsis:
 *  	Test postgresql notion of a well formed document.
 *  Usage:
 *	is-pg-well-formed <size> 
 *  Arguments:
 *  	1	number of bytes to read on the standard input
 *  Exit Status:
 *  	0	well formed
 *  	1	not well formed
 *	2	wrong number of arguments
 *  	3	Incorrect blob size
 *  	4	malloc() of xml buffer failed
 *	5	read() of standard input failed
 *	6	syntax error on udig
 *	7	sql error
 *	8	sql warning
 *	9	blob too small
 *	10	blob too large
 *  Blame:
 *  	jmscott@setspace.com
 *  	setspace@gmail.com
 *  Note:
 *	Rename is-pg-well-formed.pgc to merge-stdin-is_pg_well_formed.pgc
 */

static char progname[] = "is-pg-well-formed";

#define EXIT_WF		0
#define EXIT_NOWF	1
#define EXIT_BAD_ARGC	2
#define EXIT_BAD_SIZE	3
#define EXIT_BAD_MALLOC 4
#define EXIT_BAD_READ	5
#define EXIT_BAD_UDIG	6
#define EXIT_SQLERROR	7
#define EXIT_SQLWARN	8
#define EXIT_BLOB_SMALL 9
#define EXIT_BLOB_BIG	10

#define COMMON_NEED_READ_BLOB
#include "../../common.c"

#define COMMON_ECPG_NEED_SQL_WARNING
#define COMMON_ECPG_NEED_SQL_ERROR
#include "../../common-ecpg.c"

#include <stdlib.h>

int
main(int argc, char **argv)
{
	int size;
	size_t len;
	char *sz;

EXEC SQL BEGIN DECLARE SECTION;
	char *doc;
	bool is_xml;
EXEC SQL END DECLARE SECTION;

	if (argc != 2)
		die(EXIT_BAD_ARGC, "wrong number of arguments");

	close(1);

	//  parse the blob size as argv[1]
	sz = argv[1];
	len = strlen(sz);
	if (len < 1 || len > 19)
		die2(EXIT_BAD_SIZE, "blob size not > 0 and < 20 chars", sz);

	//  need to validate that all chars are decimal digits
	size = atoi(sz);
	if (size <= 0)
		die2(EXIT_BAD_SIZE, "atoi(blob size) <= 0", sz);

	//  allocate the xml buffer plus null byte
	doc = malloc(size + 1);
	if (doc == NULL)
		die2(EXIT_BAD_MALLOC, "malloc() failed", sz);
	doc[size] = 0;

	_read_blob(0, doc, size);

	EXEC SQL WHENEVER SQLERROR CALL _ecpg_sql_error(
		(struct _ecpg_sql_state_fault *)0
	);
	EXEC SQL WHENEVER SQLWARNING CALL _ecpg_sql_warning(
		(struct _ecpg_sql_state_fault *)0
	);
	EXEC SQL CONNECT TO default;

	//  test postgresql's notion of a well formed document
	EXEC SQL SELECT xml_is_well_formed(:doc) INTO :is_xml;

	_exit(is_xml ? EXIT_WF : EXIT_NOWF);
}
