#!/usr/bin/env bash
#
#   Synopsis:
#   	Merge a json blob read on standard input into table jsonorg.jsonb_255.
#   Usage:
# 	 upsert-jsonb_255 <udig>
#   Arguments:
#   	1	udig of the blob
#   Exit Status:
#   	0	ok, tuple was upserted
#	1	blob does not exist
#	3	unexpected error
#  Environment
#	BLOBIO_SERVICE
#	BLOBIO_GET_SERVICE
#  
PROG=upsert-jsonb_255

BLOBIO_GET_SERVICE=${BLOBIO_GET_SERVICE:=$BLOBIO_SERVICE}
TMP_BLOB=${TMPDIR:=/tmp}/$PROG-blob.$$

die()
{
	#source $SETSPACE_ROOT/schema/jsonorg/lib/upsert-fault.bash
	#die_upsert upsert_jsonb_255 $@
	echo "$PROG: ERROR: $@" >&2
	exit 3
}

leave()
{
	rm --force $TMP_BLOB || echo "ERROR: rm tmp failed: exit status=$?" >&2
}
trap leave EXIT

test $# = 1 || die "wrong number of arguments: got $#, expected 1"

JSON_UDIG=$1
SIZE=$2

blobio get								\
	--udig $JSON_UDIG						\
	--output-path $TMP_BLOB						\
	--service $BLOBIO_GET_SERVICE
STATUS=$?

case $STATUS in
0)
	SIZE=$(stat --format '%s' $TMP_BLOB)
	test $? = 0 || die "stat blob size failed: exit status=$?"
	;;
1)
	exit 1
	;;
*)
	die "blobio get failed: exit status=$STATUS"
	;;
esac
upsert-stdin-jsonb_255 $JSON_UDIG $SIZE <$TMP_BLOB			||
		die "upsert-stdin-jsonb_255 failed: exit status=$?"
