#!/bin/bash
#
#  Synopsis:
#	Extract the PDDocument scalars from PDF and merge into PostgreSQL
#  Usage:
#	merge-pddocument <udig>
#  Exit Status:
#	0	ok, extracted pddocument info and stored into PostgreSQL
#	1	pdf load failed (but still stored in PG)
#	2	blob does not exist
#	3	script invocation error 
#	4	unexpected blobio error
#	5	unexpected java putPDDocument failed
#	6	pg database error
#  Environment:
#	BLOBIO_SERVICE
#	BLOBIO_GET_SERVICE
#	TMPDIR
#  Note:
#	How do we know the output of putPDDocument is always UTF-8?
#

PROG=merge-pddocument
BLOBIO_GET_SERVICE=${BLOBIO_GET_SERVICE:=$BLOBIO_SERVICE}
TMPDIR=${TMPDIR:=/tmp}
PSQL='psql --no-psqlrc --quiet'

TMP_BLOB=$TMPDIR/$PROG-$$.pdf
TMP_ROW=$TMPDIR/$PROG-$$.row

leave()
{
	rm -f $TMP_BLOB $TMP_ROW
}
trap leave EXIT

die()
{
	STATUS=$2
	echo "$PROG: ERROR: $1" >&2
	exit $STATUS
}

ERROR()
{
	echo "$PROG: ERROR: $@" >&2
}

test $# = 1 || die "wrong number of arguments: expected 1 got $#" 3
UDIG=$1

#  fetch the pdf blob

blobio get --udig $UDIG --output-path $TMP_BLOB --service $BLOBIO_GET_SERVICE
STATUS=$?
case $STATUS in
0)
	;;
1)
	exit 2
	;;
*)
	die 'blobio get failed' 4
	;;
esac

#  execute the java extract.  although we expect only 0 and no stderr,
#  0 with stderr is normal.  an exit status of 1 indicates a failed load
#  of the pdf file.

java -cp $CLASSPATH putPDDocument <$TMP_BLOB >$TMP_ROW
EXIT_STATUS=$?
case $EXIT_STATUS in
0)
	#  pdf loaded and scalars extracted
	#  Note: are we reading UTF-8?

	read								\
		NUMBER_OF_PAGES						\
		DOCUMENT_ID						\
		VERSION							\
		IS_ALL_SECURITY_TO_BE_REMOVED				\
		IS_ENCRYPTED						\
	<$TMP_ROW
	;;
1)
	#  pdf load failed, but we merge a tuple anyway

	NUMBER_OF_PAGES=null
	DOCUMENT_ID=null
	VERSION=null
	IS_ALL_SECURITY_TO_BE_REMOVED=null
	IS_ENCRYPTED=null
	;;
*)
	#  unexpected java fault

	die "java putPDDocument failed: exit status=$EXIT_STATUS" 5
	;;
esac

$PSQL <<EOF || die "psql insert failed: exit status=$?" 7

INSERT INTO
  pdfbox.pddocument(
  	blob,
	number_of_pages,
	document_id,
	version,
	is_all_security_to_be_removed,
	is_encrypted
    ) VALUES (
    	'$UDIG',
	$NUMBER_OF_PAGES,
	$DOCUMENT_ID,
	$VERSION,
	$IS_ALL_SECURITY_TO_BE_REMOVED,
	$IS_ENCRYPTED
    ) ON CONFLICT
    	DO NOTHING
;

EOF

exit $EXIT_STATUS
