#!/bin/bash
#
#  Synopsis:
#	Boot a schema flowd server from either launchd, systemd or command-line
#  Usage:
#	SETSPACE_ROOT=/usr/local/setspace/opt/uspto
#	boot-flowd pdfbox
#	boot-flowd <schema>
#

PROG=$(basename $0)

log()
{
	if [ -n "$FLOW" ];  then
		echo "$(date +'%Y/%m/%d %H:%M:%S'): $PROG: $FLOW: $@"
	else
		echo "$(date +'%Y/%m/%d %H:%M:%S'): $PROG: $@"
	fi
}

die()
{
	log "ERROR: $@" >&2
	exit 2
}

leave()
{
	log 'good bye, cruel world'
}

test $# = 1 || die "wrong number of arguments, got $#, expected 1"
SCHEMA=$1
FLOW=etc/$SCHEMA.flow

log 'hello, world'
trap leave EXIT

log "schema: $SCHEMA"

test -n "$SETSPACE_ROOT" || die "environment var not defined: SETSPACE_ROOT"
log "SETSPACE_ROOT=$SETSPACE_ROOT"

#
#  source in global $SETSPACE_ROOT/etc/profile
#
PROFILE=$SETSPACE_ROOT/etc/profile
log "source: $PROFILE"
test -r $PROFILE || die "can not read setspace profile: $PROFILE"
. $PROFILE || die "sourcing setspace profile failed: $PROFILE"

SCHEMA_ROOT=$SETSPACE_ROOT/schema/$SCHEMA
log "schema root: $SCHEMA_ROOT"
test -d $SCHEMA_ROOT || die "schema root dir does not exist: $SCHEMA_ROOT"
cd $SCHEMA_ROOT || die "cd schema root failed: exit status=$?"

#
#  source in schema specific profile
#
PROFILE=etc/profile
log "source: $PROFILE"
test -r $PROFILE || die "can not read schema profile: $(pwd)/$PROFILE"
. $PROFILE || die "sourcing schema profile failed: $PROFILE"

#  set up gnu tools on the mac
WHICH_OS=$(uname -s)
log "operating system: $WHICH_OS"

#  on mac we require gnutools from ports distro to be install
if [ "$WHICH_OS" = Darwin ];  then
	log 'checking for gnu tools from mac ports ...'
	test -d /opt/local/libexec/gnubin || die 'port gnubin not installed'

	case "$PATH" in
	*/gnubin*)
		;;
	*)
		PATH=/opt/local/libexec/gnubin:/opt/local/bin:$PATH
		;;
	esac
fi

log "PATH=$PATH"
log "LD_LIBRARY_PATH=$LD_LIBRARY_PATH"

log 'clearing run/ directory of stale files ...'
find run -follow -type f -name 'flowd*' | while read ZAP_RUN;  do
	log "zap run/ file: $ZAP_RUN"
	rm $ZAP_RUN
done

INITX=sbin/launchd-flowd-init
if [ -x $INITX ];  then
	log "$INITX exists, so invoking ..."
	$INITX || die "launchd-flow-init failed: exit status=$?"
fi

log 'dumping process environment ...'
env | sort | while read E;  do
	log "$E"
done

log "flow file: $FLOW"
if [ $PPID = 1 -o -n "$LAUNCHED_STARTED" -o -n "$INVOCATION_ID" ];  then
	log 'started by launchd or systemd'
	log 'execing flowd ...'
	exec flowd server $FLOW
fi

log "invoked from script, so forking flowd into background"
flowd server $FLOW &
BG_PID=$!
log "bg process id: $BG_PID"
